{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// function CategoryList() {\n//   const [categories, setCategories] = useState([]);\n//   const [newCategoryName, setNewCategoryName] = useState('');\n//   const [newRecipeName, setNewRecipeName] = useState('');\n//   const [newRecipeIngredients, setNewRecipeIngredients] = useState('');\n//   const [newRecipeInstructions, setNewRecipeInstructions] = useState('');\n\n//   useEffect(() => {\n//     fetchCategories();\n//   }, []);\n\n//   const fetchCategories = () => {\n//     axios.get('http://127.0.0.1:5556/categories')\n//       .then(response => {\n//         setCategories(response.data);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching categories:', error);\n//       });\n//   };\n\n//   const handleNewCategoryChange = (event) => {\n//     setNewCategoryName(event.target.value);\n//   };\n\n//   const handleNewRecipeNameChange = (event) => {\n//     setNewRecipeName(event.target.value);\n//   };\n\n//   const handleNewRecipeIngredientsChange = (event) => {\n//     setNewRecipeIngredients(event.target.value);\n//   };\n\n//   const handleNewRecipeInstructionsChange = (event) => {\n//     setNewRecipeInstructions(event.target.value);\n//   };\n\n//   const handleNewCategorySubmit = (event) => {\n//     event.preventDefault();\n//     axios.post('http://127.0.0.1:5556/categories', { name: newCategoryName })\n//       .then(response => {\n//         const newCategory = response.data;\n//         // Create the recipe associated with the new category\n//         axios.post('http://127.0.0.1:5556/recipes', {\n//           title: newRecipeName,\n//           ingredients: newRecipeIngredients,\n//           instructions: newRecipeInstructions,\n//           category_id: newCategory.id\n//         })\n//         .then(() => {\n//           // After successfully creating the category and recipe, fetch categories again\n//           fetchCategories();\n//           // Reset form fields\n//           setNewCategoryName('');\n//           setNewRecipeName('');\n//           setNewRecipeIngredients('');\n//           setNewRecipeInstructions('');\n//         })\n//         .catch(error => {\n//           console.error('Error creating new recipe:', error);\n//         });\n//       })\n//       .catch(error => {\n//         console.error('Error creating new category:', error);\n//       });\n//   };\n\n//   const handleDeleteCategory = (categoryId) => {\n//     axios.delete(`http://127.0.0.1:5556/categories/${categoryId}`)\n//       .then(() => {\n//         // After successfully deleting the category, fetch categories again\n//         fetchCategories();\n//       })\n//       .catch(error => {\n//         console.error('Error deleting category:', error);\n//       });\n//   };\n\n//   return (\n//     <div className=\"category-list-container\">\n//       <h2>Category List</h2>\n//       {categories.map(category => (\n//         <div key={category.id} className=\"category-item\">\n//           <h3>{category.name}</h3>\n//           <button onClick={() => handleDeleteCategory(category.id)}>Delete Category</button>\n//           {/* Display recipes associated with the category */}\n//           <ul className=\"recipe-list\">\n//             {category.recipes.map(recipe => (\n//               <li key={recipe.id} className=\"recipe-item\">\n//                 <h4>{recipe.title}</h4>\n//                 <p>Ingredients: {recipe.ingredients}</p>\n//                 <p>Instructions: {recipe.instructions}</p>\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n//       ))}\n//       <form onSubmit={handleNewCategorySubmit} className=\"new-category-form\">\n//         <input\n//           type=\"text\"\n//           value={newCategoryName}\n//           onChange={handleNewCategoryChange}\n//           placeholder=\"Enter new category name\"\n//           className=\"category-input\"\n//         />\n//         <input\n//           type=\"text\"\n//           value={newRecipeName}\n//           onChange={handleNewRecipeNameChange}\n//           placeholder=\"Enter new recipe name\"\n//           className=\"recipe-input\"\n//         />\n//         <input\n//           type=\"text\"\n//           value={newRecipeIngredients}\n//           onChange={handleNewRecipeIngredientsChange}\n//           placeholder=\"Enter recipe ingredients\"\n//           className=\"recipe-input\"\n//         />\n//         <textarea\n//           value={newRecipeInstructions}\n//           onChange={handleNewRecipeInstructionsChange}\n//           placeholder=\"Enter recipe instructions\"\n//           className=\"recipe-instructions\"\n//         />\n//         <button type=\"submit\" className=\"add-category-btn\">Add Category</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default CategoryList;","map":{"version":3,"names":[],"sources":["/Users/melissavelasquezgreene/Development/code/phase-5/-Gourmet-Guidebook--project/client/src/components/CategoryList.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// function CategoryList() {\n//   const [categories, setCategories] = useState([]);\n//   const [newCategoryName, setNewCategoryName] = useState('');\n//   const [newRecipeName, setNewRecipeName] = useState('');\n//   const [newRecipeIngredients, setNewRecipeIngredients] = useState('');\n//   const [newRecipeInstructions, setNewRecipeInstructions] = useState('');\n\n//   useEffect(() => {\n//     fetchCategories();\n//   }, []);\n\n//   const fetchCategories = () => {\n//     axios.get('http://127.0.0.1:5556/categories')\n//       .then(response => {\n//         setCategories(response.data);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching categories:', error);\n//       });\n//   };\n\n//   const handleNewCategoryChange = (event) => {\n//     setNewCategoryName(event.target.value);\n//   };\n\n//   const handleNewRecipeNameChange = (event) => {\n//     setNewRecipeName(event.target.value);\n//   };\n\n//   const handleNewRecipeIngredientsChange = (event) => {\n//     setNewRecipeIngredients(event.target.value);\n//   };\n\n//   const handleNewRecipeInstructionsChange = (event) => {\n//     setNewRecipeInstructions(event.target.value);\n//   };\n\n//   const handleNewCategorySubmit = (event) => {\n//     event.preventDefault();\n//     axios.post('http://127.0.0.1:5556/categories', { name: newCategoryName })\n//       .then(response => {\n//         const newCategory = response.data;\n//         // Create the recipe associated with the new category\n//         axios.post('http://127.0.0.1:5556/recipes', {\n//           title: newRecipeName,\n//           ingredients: newRecipeIngredients,\n//           instructions: newRecipeInstructions,\n//           category_id: newCategory.id\n//         })\n//         .then(() => {\n//           // After successfully creating the category and recipe, fetch categories again\n//           fetchCategories();\n//           // Reset form fields\n//           setNewCategoryName('');\n//           setNewRecipeName('');\n//           setNewRecipeIngredients('');\n//           setNewRecipeInstructions('');\n//         })\n//         .catch(error => {\n//           console.error('Error creating new recipe:', error);\n//         });\n//       })\n//       .catch(error => {\n//         console.error('Error creating new category:', error);\n//       });\n//   };\n\n//   const handleDeleteCategory = (categoryId) => {\n//     axios.delete(`http://127.0.0.1:5556/categories/${categoryId}`)\n//       .then(() => {\n//         // After successfully deleting the category, fetch categories again\n//         fetchCategories();\n//       })\n//       .catch(error => {\n//         console.error('Error deleting category:', error);\n//       });\n//   };\n\n//   return (\n//     <div className=\"category-list-container\">\n//       <h2>Category List</h2>\n//       {categories.map(category => (\n//         <div key={category.id} className=\"category-item\">\n//           <h3>{category.name}</h3>\n//           <button onClick={() => handleDeleteCategory(category.id)}>Delete Category</button>\n//           {/* Display recipes associated with the category */}\n//           <ul className=\"recipe-list\">\n//             {category.recipes.map(recipe => (\n//               <li key={recipe.id} className=\"recipe-item\">\n//                 <h4>{recipe.title}</h4>\n//                 <p>Ingredients: {recipe.ingredients}</p>\n//                 <p>Instructions: {recipe.instructions}</p>\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n//       ))}\n//       <form onSubmit={handleNewCategorySubmit} className=\"new-category-form\">\n//         <input\n//           type=\"text\"\n//           value={newCategoryName}\n//           onChange={handleNewCategoryChange}\n//           placeholder=\"Enter new category name\"\n//           className=\"category-input\"\n//         />\n//         <input\n//           type=\"text\"\n//           value={newRecipeName}\n//           onChange={handleNewRecipeNameChange}\n//           placeholder=\"Enter new recipe name\"\n//           className=\"recipe-input\"\n//         />\n//         <input\n//           type=\"text\"\n//           value={newRecipeIngredients}\n//           onChange={handleNewRecipeIngredientsChange}\n//           placeholder=\"Enter recipe ingredients\"\n//           className=\"recipe-input\"\n//         />\n//         <textarea\n//           value={newRecipeInstructions}\n//           onChange={handleNewRecipeInstructionsChange}\n//           placeholder=\"Enter recipe instructions\"\n//           className=\"recipe-instructions\"\n//         />\n//         <button type=\"submit\" className=\"add-category-btn\">Add Category</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default CategoryList;\n\n\n\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}